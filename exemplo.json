{
  "url": "https://satsp.fazenda.sp.gov.br/COMSAT/Public/ConsultaPublica/ConsultaPublicaCfe.aspx?id=35200901262317000169590008712760087673009587",
  "hostKey": null,
  "imagem": null,
  "extracaoFisica": {
    "Nota": "<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head id="Head1"><link href="../../App_Themes/Default/extranet/css/fazenda.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazendamobile.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/MenuTopo.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.accordion.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.all.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.autocomplete.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.core.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.dialog.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.theme.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Controles.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Formulario.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Menu.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Tab.css" type="text/css" rel="stylesheet" /><title>
	Secretaria da Fazenda - Governo do Estado de São Paulo
</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /><meta name="author" content="DTI" /><meta name="description" content="Secretaria da Fazenda do Estado de São Paulo" /><meta name="keywords" content="secretaria, fazenda, sefaz, ICMS, IPVA, governo, São Paulo" /><meta name="copyright" content="Copyright © 2010 Secretaria da Fazenda do Estado de São Paulo - Todos os direitos reservados" /><meta http-equiv="X-UA-Compatible" content="IE=Edge" /><link href="../../App_Themes/Default/extranet/css/fazenda.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Base.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Formulario.css" rel="stylesheet" type="text/css" />
    <!--Jquery-->
    <link type="text/css" href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" rel="stylesheet" />    
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-1.9.0.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-ui-1.9.2.custom.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jqueryMessageSefaz.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery.printElement.min.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/jquery.maskedinput.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/Mask.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/appInsights.js"></script><script src="https://az416426.vo.msecnd.net/scripts/a/ai.0.js"></script>
    
    <!--Fim Jquery-->
    <link type="/images/x-icon" href="../../App_Themes/Default/extranet/images/favicon_novo.ico" rel="shortcut icon" />
    <script src="../../App_Themes/Default/scripts/tootip.js" type="text/javascript"></script>
<meta http-equiv="Cache-Control" content="No-Cache" /><meta http-equiv="Pragma" content="No-Cache" /><meta http-equiv="Expires" content="0" />
      <script type="text/javascript" language="javascript">
          window.history.forward(); function noBack() { window.history.forward(); }
    </script>
</head>
<body onload="noBack();" onpageshow="if (event.persisted) noBack();" onunload="" style="zoom: 1;"><map name="imlogoMap">
    <area shape="rect" coords="32,0,114,74" href="http://www.saopaulo.sp.gov.br/home/index.htm" target="_blank" alt="Governo do Estado de São Paulo" />
</map>

    <div class="wrapper">
        <form method="post" action="DadosLotesEnviadosDadosCupom.aspx" id="form1">
<div class="aspNetHidden">
<input type="hidden" name="ToolkitScriptManager1_HiddenField" id="ToolkitScriptManager1_HiddenField" value="" />
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="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" />
</div>

<script type="text/javascript">
//&lt;![CDATA[
var theForm = document.forms['form1'];
if (!theForm) {
    theForm = document.form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]&gt;
</script>


<script src="/COMSAT/WebResource.axd?d=pPqG-zd-XMQO8MOjkaI95blUypp9nP0xr_DMZwAUj0JjhpgfCZqkWg5ZuMYQLtNGfz5YXYxncvuMyp9otO-jE6pv5o81&amp;t=636765176300000000" type="text/javascript"></script>


<script type="text/javascript">
//&lt;![CDATA[
var __cultureInfo = {"name":"pt-BR","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":",","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":".","CurrencySymbol":"R$","NaNSymbol":"NaN (Não é um número)","CurrencyNegativePattern":9,"NumberNegativePattern":1,"PercentPositivePattern":1,"PercentNegativePattern":1,"NegativeInfinitySymbol":"-Infinito","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":",","NumberGroupSeparator":".","CurrencyPositivePattern":2,"PositiveInfinitySymbol":"+Infinito","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":",","PercentGroupSeparator":".","PercentSymbol":"%","PerMilleSymbol":"‰","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"","Calendar":{"MinSupportedDateTime":"\/Date(-62135589600000)\/","MaxSupportedDateTime":"\/Date(253402300799999)\/","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy HH:mm:ss","LongDatePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"dd\u0027 de \u0027MMMM","PMDesignator":"","RFC1123Pattern":"ddd, dd MMM yyyy HH\u0027:\u0027mm\u0027:\u0027ss \u0027GMT\u0027","ShortDatePattern":"dd/MM/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd HH\u0027:\u0027mm\u0027:\u0027ss\u0027Z\u0027","YearMonthPattern":"MMMM\u0027 de \u0027yyyy","AbbreviatedDayNames":["dom","seg","ter","qua","qui","sex","sáb"],"ShortestDayNames":["D","S","T","Q","Q","S","S"],"DayNames":["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"],"AbbreviatedMonthNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""],"IsReadOnly":true,"NativeCalendarName":"Calendário gregoriano","AbbreviatedMonthGenitiveNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthGenitiveNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""]},"eras":[1,"d.C.",null,0]};//]]&gt;
</script>

<script src="/COMSAT/ScriptResource.axd?d=WjNfwcSEVmtel1G5Ltv0Gqop89lHFrcKUvxrpl2iwF9TLKuYhzxC5rC5oK4XEtnqA-wwpb9E3kituJiAbOIaWppACqsQwLaIhvJHRMK197Y87bcf0&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<script src="/COMSAT/ScriptResource.axd?d=bSEHjh3hU44r-8F0Tu6XiStTL6CnIZ37WbNDrgiDzSdntWXZQXYp7Z-ZOA5_Z9ljOe9s9sX96sXYzoXDellALl7ZgrJWlcS0VvtvfbY3yPefnKW9lUfg0yedw1J37uI0wu18jA2&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<div class="aspNetHidden">

	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="69D9BED8" />
	<input type="hidden" name="__SCROLLPOSITIONX" id="__SCROLLPOSITIONX" value="0" />
	<input type="hidden" name="__SCROLLPOSITIONY" id="__SCROLLPOSITIONY" value="0" />
	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="EbXJLw+d4kpVb7GXeaLTwjaP6zhFpToArH+sO805xA+M9yfu5xDzTW/DeSw11DIuMz6kng5vsgLTUmGssb5POwR4MNpDrAK8YsLPPD+p1quwpNk0ZlYz+YMGjPmeX6eCLN5bdSYjdhJq+i7iouR5lIDZfeIgnxQPmQLUGtlB97ZKKp7mJcllJBufET31ncuI5k306BomBQKRvtf8SugXyReGZ2/QzCBgfamkFrTgoyjMWKNt3s+FLuoCzBo2OuCVIcNdcu5ft223XWhs+XmBXH4uzyunEZhFEKMg1IXFT1LB5KiO" />
</div>
        <script type="text/javascript">
//&lt;![CDATA[
Sys.WebForms.PageRequestManager._initialize('ctl00$ToolkitScriptManager1', 'form1', [], [], [], 90, 'ctl00');
//]]&gt;
</script>

        <div class="BodyStyle">
            <div class="TopStyle">
                <div class="TobBannerStyle">
                    <div style="height: 65px; border-bottom-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 25px;">
                        <div style="float: left; text-align: left;">
                            <a name="topo"></a>
                            <h1 id="logo" style="margin: 0px;">
                                <a href="http://www.fazenda.sp.gov.br" title="Secretaria da Fazenda do Estado de São Paulo">
                                     <img src="../../App_Themes/Default/extranet/images/logo.gif" id="imgLogo" alt="Secretaria da Fazenda" style="margin-top: 10px;" />
                                </a>
                            </h1>
                        </div>
                        <div style="float: right;">
                            <img src="../../App_Themes/Default/extranet/images/header_bg.jpg" id="imgHeaderBg" style="margin-top: 10px;" />
                        </div>
                    </div>
                    <div style="height: 50px; border-bottom-color: #000000; border-bottom-style: solid; border-bottom-width: 1px;">
                        <div style="float: right; padding-top: 15px; padding-left: 15px;" class="titulo_pagina">
                            
                            
                        </div>
                        <div class="titulo_sistema_extra" style="padding-top: 10px; padding-left: 15px; float: left;">
                            Cupom Fiscal Eletrônico SAT
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="ContentStyle" style="margin-top: 50px;">
                <div class="centerSpace">
                </div>
                <div class="center" style="margin-top: 40px;">
                    <table align="center" cellspacing="0" cellpadding="0" border="0">
                        <tbody><tr>
                            <td class="cantoSupEsq">
                            </td>
                            <td class="linhaSuperior">
                            </td>
                            <td class="cantoSupDir">
                            </td>
                        </tr>
                        <tr>
                            <td class="linhaEsquerda">
                            </td>
                            <td class="formContent">
                                <div class="BoxLineStyle">                                   
                                    <div class="titulo_pagina" style="text-align: center;">                                        
                                        
    SGR-SAT - Consulta Pública de Cupons Fiscais Eletrônicos

                                    </div>
                                    <div class="BoxLineItemStyle_1x" style="text-align: center;">
                                        

                                    </div>
                                    <div class="BoxClose">
                                    </div>
                                </div>
                                <div>
                                    
    <div id="divCorpo" style="height: 150; text-align: center; width: 900px;">
        <div class="alinhamentoLinha">
        </div>
        <div>
            <div id="divEsquerda" style="text-align: left; width: auto;">
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Chave de Acesso: </span>
                    </div>
                    <span id="conteudo_lblChaveAcesso" class="ValorCampo">CFe35200610947956000159590007821710548601693004</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Número do CF-e:</span>
                    </div>
                    <span id="conteudo_lblNumeroCfe" class="ValorCampo">054860</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Data/Hora de Emissão:</span>
                    </div>
                    <span id="conteudo_lblDataEmissao" class="ValorCampo">2020-06-14 10:35:05</span>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div style="background-color: #EEEEEE; float: left; width: 100%;">
            <div id="conteudo_PnlMenu" class="tab">
	
                <div style="background-color: #E6E6E6; text-align: left;">
                    <input type="submit" name="ctl00$conteudo$tabCfe" value=" CF-e " id="conteudo_tabCfe" class="formatarBotao" style="background-color:#C83232;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmitente" value=" Emitente " id="conteudo_tabEmitente" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabDestinatario" value=" Destinatário " id="conteudo_tabDestinatario" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmissao" value=" Local de Entrega " id="conteudo_tabEmissao" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabProdutoServico" value=" Produtos/Serviços " id="conteudo_tabProdutoServico" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabTotais" value=" Totais " id="conteudo_tabTotais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabInfAdicionais" value=" Inf. Adicionais " id="conteudo_tabInfAdicionais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                </div>
            
</div>
            <div class="conteudo" style="background-color: #EEEEEE; border-width: thin; border-color: #D7D7D7;&#10;                width: auto;">
                
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Dados do CF-e</legend>
                            <div>
                                <div id="div1" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Número do CF-e: </span>
                                        </div>
                                        <span id="conteudo_lblCfeNumero" class="ValorCampo">054860</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do CF-e:</span>
                                        </div>
                                        <span id="conteudo_lblCfeValorTotal" class="ValorCampo">102,07</span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Emitente</legend>
                            <div>
                                <div id="div2" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">CNPJ: </span>
                                        </div>
                                        <span id="conteudo_lblEmitenteCnpj" class="ValorCampo">10.947.956/0001-59</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Nome / Razão Social:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteNome" class="ValorCampo">TENNESSEE BARUERI CARNES LTDA</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Nome Fantasia:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteNomeFantasia" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Inscrição Estadual:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteInscricaoEstatual" class="ValorCampo">206.277.948.113</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">UF:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteUf" class="ValorCampo">35</span>
                                    </div>                                    
                                    <br />
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Número do Caixa</legend>
                            <div>
                                <div id="div14" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Número do Caixa: </span>
                                        </div>
                                        <span id="conteudo_lblNumeroCaixa" class="ValorCampo">001</span>
                                    </div>
                                    <br />                                    
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Destinatário</legend>
                            <div>
                                <div id="div3" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">CPF / CNPJ: </span>
                                        </div>
                                        <span id="conteudo_lblDestinatarioCnpj" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Nome / Razão Social:</span>
                                        </div>
                                        <span id="conteudo_lblDestinatarioNome" class="ValorCampo">XXX</span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Emissão</legend>
                            <div>
                                <div id="div4" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Versão XML: </span>
                                        </div>
                                        <span id="conteudo_lblEmissaoVersaoXml" class="ValorCampo">008 </span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Número de Série do SAT:</span>
                                        </div>
                                        <span id="conteudo_lblNumeroSat" class="ValorCampo">000782171</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Versão do Software Básico:</span>
                                        </div>
                                        <span id="conteudo_lblEmissaoSoftBasico" class="ValorCampo">03.00.00</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">CNPJ Software House:</span>
                                        </div>
                                        <span id="conteudo_lblEmissaoSoftHouse" class="ValorCampo">22.693.602/0001-04</span>
                                    </div>
                                    <br />
                                </div>
                            </div>
                        </fieldset>
                    
            </div>
        </div>
        <div style="float: right;">
            <div style="float: left; font-weight: bold; padding-top: 5px;">
                Data/Hora: 
            </div>
            <span id="conteudo_lblDataHora" class="ValorCampo">11/12/2020 16:04:37</span>
        </div>
        <div class="alinhamentoLinha">
        </div>
        <div class="alinhamentoLinha" style="text-align: center;">
            <input type="submit" name="ctl00$conteudo$btnVoltar" value="Voltar" id="conteudo_btnVoltar" class="cssButton" style="width:100px;" />
        </div>
    </div>

                                    <div id="divMensagem">
                                    </div>
                                    <input type="hidden" id="__LASTFOCUS" value="" />
                                </div>
                            </td>
                            <td class="linhaDireita">
                            </td>
                        </tr>
                        <tr>
                            <td class="cantoInfEsq">
                            </td>
                            <td class="linhaInferior">
                            </td>
                            <td class="cantoInfDir">
                            </td>
                        </tr>
                    </tbody></table>
                </div>
            </div>
            
<div style="float: right; padding-top: 10px; padding-right: 15px;">
<p style="color: #C0C0C0">  </p>
</div>

             <div class="BottomStyle">
                <div id="footer">
                    <p>
                        Secretaria da Fazenda do Estado de São Paulo</p>
                </div>
            </div>
        </div>
        

<script type="text/javascript">
//&lt;![CDATA[
(function() {var fn = function() {$get("ToolkitScriptManager1_HiddenField").value = '';Sys.Application.remove_init(fn);};Sys.Application.add_init(fn);})();
theForm.oldSubmit = theForm.submit;
theForm.submit = WebForm_SaveScrollPositionSubmit;

theForm.oldOnSubmit = theForm.onsubmit;
theForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;
//]]&gt;
</script>
</form>
    </div>


</body></html>",
    "Emissor":"<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head id="Head1"><link href="../../App_Themes/Default/extranet/css/fazenda.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazendamobile.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/MenuTopo.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.accordion.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.all.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.autocomplete.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.core.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.dialog.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.theme.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Controles.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Formulario.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Menu.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Tab.css" type="text/css" rel="stylesheet" /><title>
	Secretaria da Fazenda - Governo do Estado de São Paulo
</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /><meta name="author" content="DTI" /><meta name="description" content="Secretaria da Fazenda do Estado de São Paulo" /><meta name="keywords" content="secretaria, fazenda, sefaz, ICMS, IPVA, governo, São Paulo" /><meta name="copyright" content="Copyright © 2010 Secretaria da Fazenda do Estado de São Paulo - Todos os direitos reservados" /><meta http-equiv="X-UA-Compatible" content="IE=Edge" /><link href="../../App_Themes/Default/extranet/css/fazenda.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Base.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Formulario.css" rel="stylesheet" type="text/css" />
    <!--Jquery-->
    <link type="text/css" href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" rel="stylesheet" />    
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-1.9.0.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-ui-1.9.2.custom.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jqueryMessageSefaz.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery.printElement.min.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/jquery.maskedinput.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/Mask.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/appInsights.js"></script><script src="https://az416426.vo.msecnd.net/scripts/a/ai.0.js"></script>
    
    <!--Fim Jquery-->
    <link type="/images/x-icon" href="../../App_Themes/Default/extranet/images/favicon_novo.ico" rel="shortcut icon" />
    <script src="../../App_Themes/Default/scripts/tootip.js" type="text/javascript"></script>
<meta http-equiv="Cache-Control" content="No-Cache" /><meta http-equiv="Pragma" content="No-Cache" /><meta http-equiv="Expires" content="0" />
      <script type="text/javascript" language="javascript">
          window.history.forward(); function noBack() { window.history.forward(); }
    </script>
</head>
<body onload="noBack();" onpageshow="if (event.persisted) noBack();" onunload="" style="zoom: 1;"><map name="imlogoMap">
    <area shape="rect" coords="32,0,114,74" href="http://www.saopaulo.sp.gov.br/home/index.htm" target="_blank" alt="Governo do Estado de São Paulo" />
</map>

    <div class="wrapper">
        <form method="post" action="./DadosLotesEnviadosDadosCupom.aspx" id="form1">
<div class="aspNetHidden">
<input type="hidden" name="ToolkitScriptManager1_HiddenField" id="ToolkitScriptManager1_HiddenField" value="" />
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="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" />
</div>

<script type="text/javascript">
//&lt;![CDATA[
var theForm = document.forms['form1'];
if (!theForm) {
    theForm = document.form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]&gt;
</script>


<script src="/COMSAT/WebResource.axd?d=pPqG-zd-XMQO8MOjkaI95blUypp9nP0xr_DMZwAUj0JjhpgfCZqkWg5ZuMYQLtNGfz5YXYxncvuMyp9otO-jE6pv5o81&amp;t=636765176300000000" type="text/javascript"></script>


<script type="text/javascript">
//&lt;![CDATA[
var __cultureInfo = {"name":"pt-BR","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":",","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":".","CurrencySymbol":"R$","NaNSymbol":"NaN (Não é um número)","CurrencyNegativePattern":9,"NumberNegativePattern":1,"PercentPositivePattern":1,"PercentNegativePattern":1,"NegativeInfinitySymbol":"-Infinito","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":",","NumberGroupSeparator":".","CurrencyPositivePattern":2,"PositiveInfinitySymbol":"+Infinito","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":",","PercentGroupSeparator":".","PercentSymbol":"%","PerMilleSymbol":"‰","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"","Calendar":{"MinSupportedDateTime":"\/Date(-62135589600000)\/","MaxSupportedDateTime":"\/Date(253402300799999)\/","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy HH:mm:ss","LongDatePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"dd\u0027 de \u0027MMMM","PMDesignator":"","RFC1123Pattern":"ddd, dd MMM yyyy HH\u0027:\u0027mm\u0027:\u0027ss \u0027GMT\u0027","ShortDatePattern":"dd/MM/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd HH\u0027:\u0027mm\u0027:\u0027ss\u0027Z\u0027","YearMonthPattern":"MMMM\u0027 de \u0027yyyy","AbbreviatedDayNames":["dom","seg","ter","qua","qui","sex","sáb"],"ShortestDayNames":["D","S","T","Q","Q","S","S"],"DayNames":["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"],"AbbreviatedMonthNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""],"IsReadOnly":true,"NativeCalendarName":"Calendário gregoriano","AbbreviatedMonthGenitiveNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthGenitiveNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""]},"eras":[1,"d.C.",null,0]};//]]&gt;
</script>

<script src="/COMSAT/ScriptResource.axd?d=WjNfwcSEVmtel1G5Ltv0Gqop89lHFrcKUvxrpl2iwF9TLKuYhzxC5rC5oK4XEtnqA-wwpb9E3kituJiAbOIaWppACqsQwLaIhvJHRMK197Y87bcf0&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<script src="/COMSAT/ScriptResource.axd?d=bSEHjh3hU44r-8F0Tu6XiStTL6CnIZ37WbNDrgiDzSdntWXZQXYp7Z-ZOA5_Z9ljOe9s9sX96sXYzoXDellALl7ZgrJWlcS0VvtvfbY3yPefnKW9lUfg0yedw1J37uI0wu18jA2&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<div class="aspNetHidden">

	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="69D9BED8" />
	<input type="hidden" name="__SCROLLPOSITIONX" id="__SCROLLPOSITIONX" value="0" />
	<input type="hidden" name="__SCROLLPOSITIONY" id="__SCROLLPOSITIONY" value="0" />
	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="Wl1Gq0faPS5NnuFeBXL0+DTQoXI8VNR8UuGO4/Uw7cEcafKOihnMHgHODNwW3igcX+iTqxWuMItphLwK9Qv7bz+SlrbF7s1h2WhR7k19D+NA9y1lxiu51EpGzEiSrmmjPP8lh4ZFvCXjejaxhrqyLU3D1NB/vraxu11bvWwMrqzFl+WvI+JmC/yqQjzVLF0x0FLTAPez9/QVdUDh+BanqRLCmptPzg/oNvxPC9n2XLmE4ITUtFDW6jIi/AvD3GlE7SU2yxjkhmLlB/c44Ri0BuaI3Y8SKbQIdkSovTyLbUB/DA8H" />
</div>
        <script type="text/javascript">
//&lt;![CDATA[
Sys.WebForms.PageRequestManager._initialize('ctl00$ToolkitScriptManager1', 'form1', [], [], [], 90, 'ctl00');
//]]&gt;
</script>

        <div class="BodyStyle">
            <div class="TopStyle">
                <div class="TobBannerStyle">
                    <div style="height: 65px; border-bottom-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 25px;">
                        <div style="float: left; text-align: left;">
                            <a name="topo"></a>
                            <h1 id="logo" style="margin: 0px;">
                                <a href="http://www.fazenda.sp.gov.br" title="Secretaria da Fazenda do Estado de São Paulo">
                                     <img src="../../App_Themes/Default/extranet/images/logo.gif" id="imgLogo" alt="Secretaria da Fazenda" style="margin-top: 10px;" />
                                </a>
                            </h1>
                        </div>
                        <div style="float: right;">
                            <img src="../../App_Themes/Default/extranet/images/header_bg.jpg" id="imgHeaderBg" style="margin-top: 10px;" />
                        </div>
                    </div>
                    <div style="height: 50px; border-bottom-color: #000000; border-bottom-style: solid; border-bottom-width: 1px;">
                        <div style="float: right; padding-top: 15px; padding-left: 15px;" class="titulo_pagina">
                            
                            
                        </div>
                        <div class="titulo_sistema_extra" style="padding-top: 10px; padding-left: 15px; float: left;">
                            Cupom Fiscal Eletrônico SAT
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="ContentStyle" style="margin-top: 50px;">
                <div class="centerSpace">
                </div>
                <div class="center" style="margin-top: 40px;">
                    <table align="center" cellspacing="0" cellpadding="0" border="0">
                        <tbody><tr>
                            <td class="cantoSupEsq">
                            </td>
                            <td class="linhaSuperior">
                            </td>
                            <td class="cantoSupDir">
                            </td>
                        </tr>
                        <tr>
                            <td class="linhaEsquerda">
                            </td>
                            <td class="formContent">
                                <div class="BoxLineStyle">                                   
                                    <div class="titulo_pagina" style="text-align: center;">                                        
                                        
    SGR-SAT - Consulta Pública de Cupons Fiscais Eletrônicos

                                    </div>
                                    <div class="BoxLineItemStyle_1x" style="text-align: center;">
                                        

                                    </div>
                                    <div class="BoxClose">
                                    </div>
                                </div>
                                <div>
                                    
    <div id="divCorpo" style="height: 150; text-align: center; width: 900px;">
        <div class="alinhamentoLinha">
        </div>
        <div>
            <div id="divEsquerda" style="text-align: left; width: auto;">
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Chave de Acesso: </span>
                    </div>
                    <span id="conteudo_lblChaveAcesso" class="ValorCampo">CFe35200610947956000159590007821710548601693004</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Número do CF-e:</span>
                    </div>
                    <span id="conteudo_lblNumeroCfe" class="ValorCampo">054860</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Data/Hora de Emissão:</span>
                    </div>
                    <span id="conteudo_lblDataEmissao" class="ValorCampo">2020-06-14 10:35:05</span>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div style="background-color: #EEEEEE; float: left; width: 100%;">
            <div id="conteudo_PnlMenu" class="tab">
	
                <div style="background-color: #E6E6E6; text-align: left;">
                    <input type="submit" name="ctl00$conteudo$tabCfe" value=" CF-e " id="conteudo_tabCfe" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmitente" value=" Emitente " id="conteudo_tabEmitente" class="formatarBotao" style="background-color:#C83232;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabDestinatario" value=" Destinatário " id="conteudo_tabDestinatario" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmissao" value=" Local de Entrega " id="conteudo_tabEmissao" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabProdutoServico" value=" Produtos/Serviços " id="conteudo_tabProdutoServico" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabTotais" value=" Totais " id="conteudo_tabTotais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabInfAdicionais" value=" Inf. Adicionais " id="conteudo_tabInfAdicionais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                </div>
            
</div>
            <div class="conteudo" style="background-color: #EEEEEE; border-width: thin; border-color: #D7D7D7;&#10;                width: auto;">
                
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Dados do Emitente</legend>
                            <div>
                                <div id="div5" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">CNPJ: </span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosEmitenteCnpj" class="ValorCampo">10.947.956/0001-59</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Inscrição Estadual:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosInscricaoEstatual" class="ValorCampo">206.277.948.113</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Inscrição Municipal:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosInscricaoMunicipal" class="ValorCampo"></span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Nome Fantasia:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosNomeFantasia" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Nome / Razão Social:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosNome" class="ValorCampo">TENNESSEE BARUERI CARNES LTDA</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Endereço:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosEndereco" class="ValorCampo">ESTRADA DOS ROMEIROS, 1632</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">CEP:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosCep" class="ValorCampo">06417-000</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Bairro / Distrito:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosBairro" class="ValorCampo">VILA SAO SILVESTRE</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Município:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosMunicipio" class="ValorCampo">BARUERI</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">UF:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosUf" class="ValorCampo">35</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Código do Regime Tributário:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosCodigoRegimeTributario" class="ValorCampo">Regime Normal</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Regime Especial de Tributação do ISSQN:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosRegimeEspecialTributacaoIssqn" class="ValorCampo">Microempresa Municipal</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Indicador de Rateio do Desconto Sobre Subtotal:</span>
                                        </div>
                                        <span id="conteudo_lblEmitenteDadosIndicadorRateioDescontoSubtotal" class="ValorCampo">Não</span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    
            </div>
        </div>
        <div style="float: right;">
            <div style="float: left; font-weight: bold; padding-top: 5px;">
                Data/Hora: 
            </div>
            <span id="conteudo_lblDataHora" class="ValorCampo">11/12/2020 16:04:39</span>
        </div>
        <div class="alinhamentoLinha">
        </div>
        <div class="alinhamentoLinha" style="text-align: center;">
            <input type="submit" name="ctl00$conteudo$btnVoltar" value="Voltar" id="conteudo_btnVoltar" class="cssButton" style="width:100px;" />
        </div>
    </div>

                                    <div id="divMensagem">
                                    </div>
                                    <input type="hidden" id="__LASTFOCUS" value="" />
                                </div>
                            </td>
                            <td class="linhaDireita">
                            </td>
                        </tr>
                        <tr>
                            <td class="cantoInfEsq">
                            </td>
                            <td class="linhaInferior">
                            </td>
                            <td class="cantoInfDir">
                            </td>
                        </tr>
                    </tbody></table>
                </div>
            </div>
            
<div style="float: right; padding-top: 10px; padding-right: 15px;">
<p style="color: #C0C0C0">  </p>
</div>

             <div class="BottomStyle">
                <div id="footer">
                    <p>
                        Secretaria da Fazenda do Estado de São Paulo</p>
                </div>
            </div>
        </div>
        

<script type="text/javascript">
//&lt;![CDATA[
(function() {var fn = function() {$get("ToolkitScriptManager1_HiddenField").value = '';Sys.Application.remove_init(fn);};Sys.Application.add_init(fn);})();
theForm.oldSubmit = theForm.submit;
theForm.submit = WebForm_SaveScrollPositionSubmit;

theForm.oldOnSubmit = theForm.onsubmit;
theForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;

theForm.oldOnLoad = window.onload;
window.onload = WebForm_RestoreScrollPosition;
//]]&gt;
</script>
</form>
    </div>


</body></html>",
    "Pagamento":"<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head id="Head1"><link href="../../App_Themes/Default/extranet/css/fazenda.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazendamobile.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/MenuTopo.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.accordion.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.all.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.autocomplete.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.core.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.dialog.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.theme.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Controles.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Formulario.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Menu.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Tab.css" type="text/css" rel="stylesheet" /><title>
	Secretaria da Fazenda - Governo do Estado de São Paulo
</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /><meta name="author" content="DTI" /><meta name="description" content="Secretaria da Fazenda do Estado de São Paulo" /><meta name="keywords" content="secretaria, fazenda, sefaz, ICMS, IPVA, governo, São Paulo" /><meta name="copyright" content="Copyright © 2010 Secretaria da Fazenda do Estado de São Paulo - Todos os direitos reservados" /><meta http-equiv="X-UA-Compatible" content="IE=Edge" /><link href="../../App_Themes/Default/extranet/css/fazenda.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Base.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Formulario.css" rel="stylesheet" type="text/css" />
    <!--Jquery-->
    <link type="text/css" href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" rel="stylesheet" />    
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-1.9.0.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-ui-1.9.2.custom.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jqueryMessageSefaz.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery.printElement.min.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/jquery.maskedinput.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/Mask.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/appInsights.js"></script><script src="https://az416426.vo.msecnd.net/scripts/a/ai.0.js"></script>
    
    <!--Fim Jquery-->
    <link type="/images/x-icon" href="../../App_Themes/Default/extranet/images/favicon_novo.ico" rel="shortcut icon" />
    <script src="../../App_Themes/Default/scripts/tootip.js" type="text/javascript"></script>
<meta http-equiv="Cache-Control" content="No-Cache" /><meta http-equiv="Pragma" content="No-Cache" /><meta http-equiv="Expires" content="0" />
      <script type="text/javascript" language="javascript">
          window.history.forward(); function noBack() { window.history.forward(); }
    </script>
</head>
<body onload="noBack();" onpageshow="if (event.persisted) noBack();" onunload="" style="zoom: 1;"><map name="imlogoMap">
    <area shape="rect" coords="32,0,114,74" href="http://www.saopaulo.sp.gov.br/home/index.htm" target="_blank" alt="Governo do Estado de São Paulo" />
</map>

    <div class="wrapper">
        <form method="post" action="./DadosLotesEnviadosDadosCupom.aspx" id="form1">
<div class="aspNetHidden">
<input type="hidden" name="ToolkitScriptManager1_HiddenField" id="ToolkitScriptManager1_HiddenField" value="" />
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="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" />
</div>

<script type="text/javascript">
//&lt;![CDATA[
var theForm = document.forms['form1'];
if (!theForm) {
    theForm = document.form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]&gt;
</script>


<script src="/COMSAT/WebResource.axd?d=pPqG-zd-XMQO8MOjkaI95blUypp9nP0xr_DMZwAUj0JjhpgfCZqkWg5ZuMYQLtNGfz5YXYxncvuMyp9otO-jE6pv5o81&amp;t=636765176300000000" type="text/javascript"></script>


<script type="text/javascript">
//&lt;![CDATA[
var __cultureInfo = {"name":"pt-BR","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":",","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":".","CurrencySymbol":"R$","NaNSymbol":"NaN (Não é um número)","CurrencyNegativePattern":9,"NumberNegativePattern":1,"PercentPositivePattern":1,"PercentNegativePattern":1,"NegativeInfinitySymbol":"-Infinito","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":",","NumberGroupSeparator":".","CurrencyPositivePattern":2,"PositiveInfinitySymbol":"+Infinito","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":",","PercentGroupSeparator":".","PercentSymbol":"%","PerMilleSymbol":"‰","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"","Calendar":{"MinSupportedDateTime":"\/Date(-62135589600000)\/","MaxSupportedDateTime":"\/Date(253402300799999)\/","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy HH:mm:ss","LongDatePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"dd\u0027 de \u0027MMMM","PMDesignator":"","RFC1123Pattern":"ddd, dd MMM yyyy HH\u0027:\u0027mm\u0027:\u0027ss \u0027GMT\u0027","ShortDatePattern":"dd/MM/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd HH\u0027:\u0027mm\u0027:\u0027ss\u0027Z\u0027","YearMonthPattern":"MMMM\u0027 de \u0027yyyy","AbbreviatedDayNames":["dom","seg","ter","qua","qui","sex","sáb"],"ShortestDayNames":["D","S","T","Q","Q","S","S"],"DayNames":["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"],"AbbreviatedMonthNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""],"IsReadOnly":true,"NativeCalendarName":"Calendário gregoriano","AbbreviatedMonthGenitiveNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthGenitiveNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""]},"eras":[1,"d.C.",null,0]};//]]&gt;
</script>

<script src="/COMSAT/ScriptResource.axd?d=WjNfwcSEVmtel1G5Ltv0Gqop89lHFrcKUvxrpl2iwF9TLKuYhzxC5rC5oK4XEtnqA-wwpb9E3kituJiAbOIaWppACqsQwLaIhvJHRMK197Y87bcf0&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<script src="/COMSAT/ScriptResource.axd?d=bSEHjh3hU44r-8F0Tu6XiStTL6CnIZ37WbNDrgiDzSdntWXZQXYp7Z-ZOA5_Z9ljOe9s9sX96sXYzoXDellALl7ZgrJWlcS0VvtvfbY3yPefnKW9lUfg0yedw1J37uI0wu18jA2&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<div class="aspNetHidden">

	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="69D9BED8" />
	<input type="hidden" name="__SCROLLPOSITIONX" id="__SCROLLPOSITIONX" value="0" />
	<input type="hidden" name="__SCROLLPOSITIONY" id="__SCROLLPOSITIONY" value="0" />
	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="ITCA6bRUGSzR+LPVzuTWEznl9jZc51GpsIIkXast1Mg8gvkjRHcQRwMlE+ba9uiqh6I+Zcn9T2KPG3YmHCQ6BmEA28UP2LJ/zT2Rg1mynmU5QImA8C17FnaPxmBE8vE9RN1JcyVQlmCohZWxlM/8od4TZQEeJZtyg1VyMXiF8e1g7oy0VfiABqvyO8a5Hrh7Flua/pdFKC8DVHY6G5nwpiQdwfNr4Mmv/Q85H80gHZTbjHTXk1qVEfNzaoWHmKIawCOIw7SsnzSWNi675nKTEWqNnXPXKWOzXFtHShimpRQDa+mS" />
</div>
        <script type="text/javascript">
//&lt;![CDATA[
Sys.WebForms.PageRequestManager._initialize('ctl00$ToolkitScriptManager1', 'form1', [], [], [], 90, 'ctl00');
//]]&gt;
</script>

        <div class="BodyStyle">
            <div class="TopStyle">
                <div class="TobBannerStyle">
                    <div style="height: 65px; border-bottom-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 25px;">
                        <div style="float: left; text-align: left;">
                            <a name="topo"></a>
                            <h1 id="logo" style="margin: 0px;">
                                <a href="http://www.fazenda.sp.gov.br" title="Secretaria da Fazenda do Estado de São Paulo">
                                     <img src="../../App_Themes/Default/extranet/images/logo.gif" id="imgLogo" alt="Secretaria da Fazenda" style="margin-top: 10px;" />
                                </a>
                            </h1>
                        </div>
                        <div style="float: right;">
                            <img src="../../App_Themes/Default/extranet/images/header_bg.jpg" id="imgHeaderBg" style="margin-top: 10px;" />
                        </div>
                    </div>
                    <div style="height: 50px; border-bottom-color: #000000; border-bottom-style: solid; border-bottom-width: 1px;">
                        <div style="float: right; padding-top: 15px; padding-left: 15px;" class="titulo_pagina">
                            
                            
                        </div>
                        <div class="titulo_sistema_extra" style="padding-top: 10px; padding-left: 15px; float: left;">
                            Cupom Fiscal Eletrônico SAT
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="ContentStyle" style="margin-top: 50px;">
                <div class="centerSpace">
                </div>
                <div class="center" style="margin-top: 40px;">
                    <table align="center" cellspacing="0" cellpadding="0" border="0">
                        <tbody><tr>
                            <td class="cantoSupEsq">
                            </td>
                            <td class="linhaSuperior">
                            </td>
                            <td class="cantoSupDir">
                            </td>
                        </tr>
                        <tr>
                            <td class="linhaEsquerda">
                            </td>
                            <td class="formContent">
                                <div class="BoxLineStyle">                                   
                                    <div class="titulo_pagina" style="text-align: center;">                                        
                                        
    SGR-SAT - Consulta Pública de Cupons Fiscais Eletrônicos

                                    </div>
                                    <div class="BoxLineItemStyle_1x" style="text-align: center;">
                                        

                                    </div>
                                    <div class="BoxClose">
                                    </div>
                                </div>
                                <div>
                                    
    <div id="divCorpo" style="height: 150; text-align: center; width: 900px;">
        <div class="alinhamentoLinha">
        </div>
        <div>
            <div id="divEsquerda" style="text-align: left; width: auto;">
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Chave de Acesso: </span>
                    </div>
                    <span id="conteudo_lblChaveAcesso" class="ValorCampo">CFe35200610947956000159590007821710548601693004</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Número do CF-e:</span>
                    </div>
                    <span id="conteudo_lblNumeroCfe" class="ValorCampo">054860</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Data/Hora de Emissão:</span>
                    </div>
                    <span id="conteudo_lblDataEmissao" class="ValorCampo">2020-06-14 10:35:05</span>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div style="background-color: #EEEEEE; float: left; width: 100%;">
            <div id="conteudo_PnlMenu" class="tab">
	
                <div style="background-color: #E6E6E6; text-align: left;">
                    <input type="submit" name="ctl00$conteudo$tabCfe" value=" CF-e " id="conteudo_tabCfe" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmitente" value=" Emitente " id="conteudo_tabEmitente" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabDestinatario" value=" Destinatário " id="conteudo_tabDestinatario" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmissao" value=" Local de Entrega " id="conteudo_tabEmissao" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabProdutoServico" value=" Produtos/Serviços " id="conteudo_tabProdutoServico" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabTotais" value=" Totais " id="conteudo_tabTotais" class="formatarBotao" style="background-color:#C83232;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabInfAdicionais" value=" Inf. Adicionais " id="conteudo_tabInfAdicionais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                </div>
            
</div>
            <div class="conteudo" style="background-color: #EEEEEE; border-width: thin; border-color: #D7D7D7;&#10;                width: auto;">
                
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Totais</legend>
                            <div>
                                <div id="div8" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do CF-e: </span>
                                        </div>
                                        <span id="conteudo_lblTotaisValorTotalCfe" class="ValorCampo">102,07</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total dos Produtos e Serviços:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisValorTotalProdutosServicos" class="ValorCampo">102,07</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total dos Descontos Sobre Item:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisValorTotalDescontoItem" class="ValorCampo">0,00</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total de Outras Despesas Acessórias Sobre Item:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisValorTotalOutrasDespesasAcessoriasItem" class="ValorCampo">0,00</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor da Entrada de Desconto Sobre o Subtotal:</span>
                                        </div>
                                        <span id="conteudo_lblValorEntradaDescontoSubtotal" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor da Entrada de Acréscimo Sobre o Subtotal:</span>
                                        </div>
                                        <span id="conteudo_lblValorEntradaAcrescimoSubtotal" class="ValorCampo">Não Informado</span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Totais ICMS</legend>
                            <div>
                                <div id="div9" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do ICMS: </span>
                                        </div>
                                        <span id="conteudo_lblTotaisIcmsValorTotalIcms" class="ValorCampo">4,42</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do PIS:</span>
                                        </div>
                                        <span id="conteudo_lblValorTotalPis" class="ValorCampo">0,00</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do COFINS:</span>
                                        </div>
                                        <span id="conteudo_lblValorTotalCofins" class="ValorCampo">0,00</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do PIS-ST:</span>
                                        </div>
                                        <span id="conteudo_lblValorTotalPisSt" class="ValorCampo">0,00</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do COFINS-ST:</span>
                                        </div>
                                        <span id="conteudo_lblValorTotalCofinsSt" class="ValorCampo">0,00</span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Totais ISSQN</legend>
                            <div>
                                <div id="div10" style="text-align: left; width: auto;">
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total da Base de Cálculo do ISSQN: </span>
                                        </div>
                                        <span id="conteudo_lblTotaisIssqnValorTotalBaseCalculoIssqn" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do ISS:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisIssqnValorTotalIss" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do PIS Sobre Serviços:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisIssqnValorTotalPisServico" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do COFINS Sobre Serviços:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisIssqnValorTotalCofinsServico" class="ValorCampo">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do PIS-ST Sobre Serviços:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisIssqnValorTotalPisStServico">Não Informado</span>
                                    </div>
                                    <br />
                                    <div class="alinhamentoLinha">
                                        <div class="TituloLinhaCampo">
                                            <span class="TituloCampo">Valor Total do COFINS-ST Sobre Serviços:</span>
                                        </div>
                                        <span id="conteudo_lblTotaisIssqnValorTotalCofinsStServico" class="ValorCampo">Não Informado</span>
                                    </div>
                                </div>
                                <div class="alinhamentoLinha">
                                    <div class="TituloLinhaCampo">
                                        <span class="TituloCampo">Valor dos Tributos Aproximado do CFe-SAT –Lei12471/12:</span>
                                    </div>
                                    <span id="conteudo_lblvalorCFeLei12741" class="ValorCampo">2,81</span>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Meios de Pagamento</legend>
                            <div>
                                <div id="div11" style="text-align: left; width: auto;">
                                    <div>
	<table tabindex="11" cellspacing="0" cellpadding="3" align="Left" rules="cols" id="conteudo_grvMeiosPagamento" style="color:Black;background-color:White;border-color:Black;border-width:1px;border-style:Solid;height:54px;border-collapse:collapse;">
		<tbody><tr style="color:Black;background-color:#999999;font-weight:bold;">
			<th align="center" scope="col" style="height:10px;">Código do Meio de Pagamento</th><th align="center" scope="col" style="height:10px;">Valor do Meio de Pagamento</th><th align="center" scope="col" style="height:10px;">Credenciadora do Cartão</th>
		</tr><tr>
			<td>
                                                    <span id="conteudo_grvMeiosPagamento_lblMeiosPagamentoCodigoMeioPagamento_0" class="ValorCampo">04- Cartão de Débito</span>
                                                </td><td>
                                                    <span id="conteudo_grvMeiosPagamento_lblMeiosPagamentoValorMeioPagamento_0" class="ValorCampo">102,07</span>
                                                </td><td>
                                                    <span id="conteudo_grvMeiosPagamento_lblMeiosPagamentoCredenciadora_0" class="ValorCampo"></span>
                                                </td>
		</tr>
	</tbody></table>
</div>
                                </div>
                            </div>
                        </fieldset>
                        <div class="alinhamentoLinha">
                            <div class="TituloLinhaCampo">
                                <span class="TituloCampo">Valor do Troco:</span>
                            </div>
                            <span id="conteudo_lblValorTroco" class="ValorCampo">0,00</span>
                        </div>
                    
            </div>
        </div>
        <div style="float: right;">
            <div style="float: left; font-weight: bold; padding-top: 5px;">
                Data/Hora: 
            </div>
            <span id="conteudo_lblDataHora" class="ValorCampo">11/12/2020 16:04:40</span>
        </div>
        <div class="alinhamentoLinha">
        </div>
        <div class="alinhamentoLinha" style="text-align: center;">
            <input type="submit" name="ctl00$conteudo$btnVoltar" value="Voltar" id="conteudo_btnVoltar" class="cssButton" style="width:100px;" />
        </div>
    </div>

                                    <div id="divMensagem">
                                    </div>
                                    <input type="hidden" id="__LASTFOCUS" value="" />
                                </div>
                            </td>
                            <td class="linhaDireita">
                            </td>
                        </tr>
                        <tr>
                            <td class="cantoInfEsq">
                            </td>
                            <td class="linhaInferior">
                            </td>
                            <td class="cantoInfDir">
                            </td>
                        </tr>
                    </tbody></table>
                </div>
            </div>
            
<div style="float: right; padding-top: 10px; padding-right: 15px;">
<p style="color: #C0C0C0">  </p>
</div>

             <div class="BottomStyle">
                <div id="footer">
                    <p>
                        Secretaria da Fazenda do Estado de São Paulo</p>
                </div>
            </div>
        </div>
        

<script type="text/javascript">
//&lt;![CDATA[
(function() {var fn = function() {$get("ToolkitScriptManager1_HiddenField").value = '';Sys.Application.remove_init(fn);};Sys.Application.add_init(fn);})();
theForm.oldSubmit = theForm.submit;
theForm.submit = WebForm_SaveScrollPositionSubmit;

theForm.oldOnSubmit = theForm.onsubmit;
theForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;

theForm.oldOnLoad = window.onload;
window.onload = WebForm_RestoreScrollPosition;
//]]&gt;
</script>
</form>
    </div>


</body></html>",
    "Itens":"<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head id="Head1"><link href="../../App_Themes/Default/extranet/css/fazenda.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/fazendamobile.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/extranet/css/MenuTopo.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.accordion.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.all.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.autocomplete.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.base.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.core.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.dialog.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery.ui.theme.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Controles.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Formulario.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Menu.css" type="text/css" rel="stylesheet" /><link href="../../App_Themes/Default/Styles/Tab.css" type="text/css" rel="stylesheet" /><title>
	Secretaria da Fazenda - Governo do Estado de São Paulo
</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /><meta name="author" content="DTI" /><meta name="description" content="Secretaria da Fazenda do Estado de São Paulo" /><meta name="keywords" content="secretaria, fazenda, sefaz, ICMS, IPVA, governo, São Paulo" /><meta name="copyright" content="Copyright © 2010 Secretaria da Fazenda do Estado de São Paulo - Todos os direitos reservados" /><meta http-equiv="X-UA-Compatible" content="IE=Edge" /><link href="../../App_Themes/Default/extranet/css/fazenda.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/extranet/css/fazenda1.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Base.css" rel="stylesheet" type="text/css" /><link href="../../App_Themes/Default/Styles/Formulario.css" rel="stylesheet" type="text/css" />
    <!--Jquery-->
    <link type="text/css" href="../../App_Themes/Default/Styles/blitzer/jquery-ui-1.8.14.custom.css" rel="stylesheet" />    
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-1.9.0.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery-ui-1.9.2.custom.min.js"></script>  
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jqueryMessageSefaz.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/Scripts/jquery.printElement.min.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/jquery.maskedinput.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/Mask.js"></script>
    <script type="text/javascript" src="../../App_Themes/Default/scripts/appInsights.js"></script><script src="https://az416426.vo.msecnd.net/scripts/a/ai.0.js"></script>
    
    <!--Fim Jquery-->
    <link type="/images/x-icon" href="../../App_Themes/Default/extranet/images/favicon_novo.ico" rel="shortcut icon" />
    <script src="../../App_Themes/Default/scripts/tootip.js" type="text/javascript"></script>
<meta http-equiv="Cache-Control" content="No-Cache" /><meta http-equiv="Pragma" content="No-Cache" /><meta http-equiv="Expires" content="0" />
      <script type="text/javascript" language="javascript">
          window.history.forward(); function noBack() { window.history.forward(); }
    </script>
</head>
<body onload="noBack();" onpageshow="if (event.persisted) noBack();" onunload="" style="zoom: 1;"><map name="imlogoMap">
    <area shape="rect" coords="32,0,114,74" href="http://www.saopaulo.sp.gov.br/home/index.htm" target="_blank" alt="Governo do Estado de São Paulo" />
</map>

    <div class="wrapper">
        <form method="post" action="./DadosLotesEnviadosDadosCupom.aspx" id="form1">
<div class="aspNetHidden">
<input type="hidden" name="ToolkitScriptManager1_HiddenField" id="ToolkitScriptManager1_HiddenField" value="" />
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="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" />
</div>

<script type="text/javascript">
//&lt;![CDATA[
var theForm = document.forms['form1'];
if (!theForm) {
    theForm = document.form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]&gt;
</script>


<script src="/COMSAT/WebResource.axd?d=pPqG-zd-XMQO8MOjkaI95blUypp9nP0xr_DMZwAUj0JjhpgfCZqkWg5ZuMYQLtNGfz5YXYxncvuMyp9otO-jE6pv5o81&amp;t=636765176300000000" type="text/javascript"></script>


<script type="text/javascript">
//&lt;![CDATA[
var __cultureInfo = {"name":"pt-BR","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":",","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":".","CurrencySymbol":"R$","NaNSymbol":"NaN (Não é um número)","CurrencyNegativePattern":9,"NumberNegativePattern":1,"PercentPositivePattern":1,"PercentNegativePattern":1,"NegativeInfinitySymbol":"-Infinito","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":",","NumberGroupSeparator":".","CurrencyPositivePattern":2,"PositiveInfinitySymbol":"+Infinito","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":",","PercentGroupSeparator":".","PercentSymbol":"%","PerMilleSymbol":"‰","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"","Calendar":{"MinSupportedDateTime":"\/Date(-62135589600000)\/","MaxSupportedDateTime":"\/Date(253402300799999)\/","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy HH:mm:ss","LongDatePattern":"dddd, d\u0027 de \u0027MMMM\u0027 de \u0027yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"dd\u0027 de \u0027MMMM","PMDesignator":"","RFC1123Pattern":"ddd, dd MMM yyyy HH\u0027:\u0027mm\u0027:\u0027ss \u0027GMT\u0027","ShortDatePattern":"dd/MM/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027T\u0027HH\u0027:\u0027mm\u0027:\u0027ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\u0027-\u0027MM\u0027-\u0027dd HH\u0027:\u0027mm\u0027:\u0027ss\u0027Z\u0027","YearMonthPattern":"MMMM\u0027 de \u0027yyyy","AbbreviatedDayNames":["dom","seg","ter","qua","qui","sex","sáb"],"ShortestDayNames":["D","S","T","Q","Q","S","S"],"DayNames":["domingo","segunda-feira","terça-feira","quarta-feira","quinta-feira","sexta-feira","sábado"],"AbbreviatedMonthNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""],"IsReadOnly":true,"NativeCalendarName":"Calendário gregoriano","AbbreviatedMonthGenitiveNames":["jan","fev","mar","abr","mai","jun","jul","ago","set","out","nov","dez",""],"MonthGenitiveNames":["janeiro","fevereiro","março","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro",""]},"eras":[1,"d.C.",null,0]};//]]&gt;
</script>

<script src="/COMSAT/ScriptResource.axd?d=WjNfwcSEVmtel1G5Ltv0Gqop89lHFrcKUvxrpl2iwF9TLKuYhzxC5rC5oK4XEtnqA-wwpb9E3kituJiAbOIaWppACqsQwLaIhvJHRMK197Y87bcf0&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<script src="/COMSAT/ScriptResource.axd?d=bSEHjh3hU44r-8F0Tu6XiStTL6CnIZ37WbNDrgiDzSdntWXZQXYp7Z-ZOA5_Z9ljOe9s9sX96sXYzoXDellALl7ZgrJWlcS0VvtvfbY3yPefnKW9lUfg0yedw1J37uI0wu18jA2&amp;t=ffffffffe4ec58b9" type="text/javascript"></script>
<div class="aspNetHidden">

	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="69D9BED8" />
	<input type="hidden" name="__SCROLLPOSITIONX" id="__SCROLLPOSITIONX" value="0" />
	<input type="hidden" name="__SCROLLPOSITIONY" id="__SCROLLPOSITIONY" value="0" />
	<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="4lCFxTFy9P/DPaGooMP3HvnJKnVcVsuZemTDHj7ZxSVmWEiz+5cJm8cxmc0yafxOOqnGgkYk2casC9Ylf74YxR6hVeSp8cwe6oqZtWVYlm9oJal3qx8A1dpNAGp1usLfG7IcZj1WoPETrqsGJpnHcKfplXQFXumEy66OgSQXa8LaqYlckGe2aFaN5ejdufR1UzncLqklhZJckDW6EDRZJJr8YxfDJw4PV29Uvv7DZanv0hkhjQt9zyIngpXpewgvDRVw5kqTpK5+NnS6519JLsaxTjNTbPT6jdbHvA39Xe9ZzOdC" />
</div>
        <script type="text/javascript">
//&lt;![CDATA[
Sys.WebForms.PageRequestManager._initialize('ctl00$ToolkitScriptManager1', 'form1', [], [], [], 90, 'ctl00');
//]]&gt;
</script>

        <div class="BodyStyle">
            <div class="TopStyle">
                <div class="TobBannerStyle">
                    <div style="height: 65px; border-bottom-color: #000000; border-bottom-width: 1px; border-bottom-style: solid; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 25px;">
                        <div style="float: left; text-align: left;">
                            <a name="topo"></a>
                            <h1 id="logo" style="margin: 0px;">
                                <a href="http://www.fazenda.sp.gov.br" title="Secretaria da Fazenda do Estado de São Paulo">
                                     <img src="../../App_Themes/Default/extranet/images/logo.gif" id="imgLogo" alt="Secretaria da Fazenda" style="margin-top: 10px;" />
                                </a>
                            </h1>
                        </div>
                        <div style="float: right;">
                            <img src="../../App_Themes/Default/extranet/images/header_bg.jpg" id="imgHeaderBg" style="margin-top: 10px;" />
                        </div>
                    </div>
                    <div style="height: 50px; border-bottom-color: #000000; border-bottom-style: solid; border-bottom-width: 1px;">
                        <div style="float: right; padding-top: 15px; padding-left: 15px;" class="titulo_pagina">
                            
                            
                        </div>
                        <div class="titulo_sistema_extra" style="padding-top: 10px; padding-left: 15px; float: left;">
                            Cupom Fiscal Eletrônico SAT
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="ContentStyle" style="margin-top: 50px;">
                <div class="centerSpace">
                </div>
                <div class="center" style="margin-top: 40px;">
                    <table align="center" cellspacing="0" cellpadding="0" border="0">
                        <tbody><tr>
                            <td class="cantoSupEsq">
                            </td>
                            <td class="linhaSuperior">
                            </td>
                            <td class="cantoSupDir">
                            </td>
                        </tr>
                        <tr>
                            <td class="linhaEsquerda">
                            </td>
                            <td class="formContent">
                                <div class="BoxLineStyle">                                   
                                    <div class="titulo_pagina" style="text-align: center;">                                        
                                        
    SGR-SAT - Consulta Pública de Cupons Fiscais Eletrônicos

                                    </div>
                                    <div class="BoxLineItemStyle_1x" style="text-align: center;">
                                        

                                    </div>
                                    <div class="BoxClose">
                                    </div>
                                </div>
                                <div>
                                    
    <div id="divCorpo" style="height: 150; text-align: center; width: 900px;">
        <div class="alinhamentoLinha">
        </div>
        <div>
            <div id="divEsquerda" style="text-align: left; width: auto;">
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Chave de Acesso: </span>
                    </div>
                    <span id="conteudo_lblChaveAcesso" class="ValorCampo">CFe35200610947956000159590007821710548601693004</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Número do CF-e:</span>
                    </div>
                    <span id="conteudo_lblNumeroCfe" class="ValorCampo">054860</span>
                </div>
                <div class="alinhamentoLinha">
                    <div class="TituloLinhaCampo">
                        <span class="TituloCampo">Data/Hora de Emissão:</span>
                    </div>
                    <span id="conteudo_lblDataEmissao" class="ValorCampo">2020-06-14 10:35:05</span>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div style="background-color: #EEEEEE; float: left; width: 100%;">
            <div id="conteudo_PnlMenu" class="tab">
	
                <div style="background-color: #E6E6E6; text-align: left;">
                    <input type="submit" name="ctl00$conteudo$tabCfe" value=" CF-e " id="conteudo_tabCfe" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmitente" value=" Emitente " id="conteudo_tabEmitente" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabDestinatario" value=" Destinatário " id="conteudo_tabDestinatario" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabEmissao" value=" Local de Entrega " id="conteudo_tabEmissao" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabProdutoServico" value=" Produtos/Serviços " id="conteudo_tabProdutoServico" class="formatarBotao" style="background-color:#C83232;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabTotais" value=" Totais " id="conteudo_tabTotais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                    <input type="submit" name="ctl00$conteudo$tabInfAdicionais" value=" Inf. Adicionais " id="conteudo_tabInfAdicionais" class="formatarBotao" style="background-color:#969696;border-width:0px;border-style:None;height:28px;" />
                </div>
            
</div>
            <div class="conteudo" style="background-color: #EEEEEE; border-width: thin; border-color: #D7D7D7;&#10;                width: auto;">
                
                        <fieldset style="width: auto; text-align: center">
                            <legend class="TituloCampo">Produtos e Serviços</legend>
                            <div style="overflow:auto;">
                                <div id="div13" style="text-align: left; width: 850px;">
                                    <div>
	<table tabindex="11" cellspacing="0" cellpadding="3" align="Left" rules="cols" id="conteudo_grvProdutosServicos" style="color:Black;background-color:White;border-color:Black;border-width:1px;border-style:Solid;height:54px;width:6000px;border-collapse:collapse;">
		<tbody><tr style="color:Black;background-color:#999999;font-weight:bold;">
			<th align="center" scope="col" style="height:10px;width:50px;">Núm.</th><th align="center" scope="col" style="height:10px;width:200px;">Descrição</th><th align="center" scope="col" style="height:10px;width:50px;">Qtd. Comercial</th><th align="center" scope="col" style="height:10px;width:50px;">Unid. Comercial</th><th align="center" scope="col" style="height:10px;width:50px;">Valor Líquido do Item</th><th align="center" scope="col" style="height:10px;width:100px;">Informações Adicionais do Produto</th><th align="center" scope="col" style="height:10px;width:100px;">Cód. Produto</th><th align="center" scope="col" style="height:10px;width:200px;">Cód. GTIN</th><th align="center" scope="col" style="height:10px;width:100px;">Cód. NCM</th><th align="center" scope="col" style="height:10px;width:100px;">Código Especificador da Substituição Tributária</th><th align="center" scope="col" style="height:10px;width:100px;">CFOP</th><th align="center" scope="col" style="height:10px;width:100px;">Valor Unit.</th><th align="center" scope="col" style="height:10px;width:100px;">Valor Bruto</th><th align="center" scope="col" style="height:10px;width:100px;">Regra de Cálculo</th><th align="center" scope="col" style="height:10px;width:100px;">Valor do Desconto</th><th align="center" scope="col" style="height:10px;width:100px;">Outras Despesas Acessórias</th><th align="center" scope="col" style="height:10px;width:100px;">Rateio do Desconto Sobre Subtotal</th><th align="center" scope="col" style="height:10px;width:100px;">Rateio do Acréscimo Sobre Subtotal</th><th align="center" scope="col" style="height:10px;width:100px;">Observações Fisco</th><th align="center" scope="col" style="height:10px;width:100px;">Origem da Mercadoria</th><th align="center" scope="col" style="height:10px;width:100px;">Tributação do ICMS</th><th align="center" scope="col" style="height:10px;width:100px;">Cód. de Situação da Operação - Simples Nacional</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota Efetiva</th><th align="center" scope="col" style="height:10px;width:100px;">Valor do ICMS</th><th align="center" scope="col" style="height:10px;width:100px;">Código de Situação Tributária PIS</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da Base de Cálculo do PIS</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota do PIS(%)</th><th align="center" scope="col" style="height:10px;width:100px;">Quantidade Vendida PIS</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota do PIS</th><th align="center" scope="col" style="height:10px;width:100px;">Valor do PIS</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da Base de Cálculo do PIS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota do PIS ST(%)</th><th align="center" scope="col" style="height:10px;width:100px;">Quantidade Vendida PIS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota do PIS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Valor do PIS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Código de Situação Tributária da COFINS</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da Base de Cálculo da COFINS</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota da COFINS(%)</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da COFINS</th><th align="center" scope="col" style="height:10px;width:100px;">Quantidade Vendida COFINS</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota da COFINS</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da Base de Cálculo da COFINS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota da COFINS ST(%)</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da COFINS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Quantidade Vendida COFINS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota da COFINS ST</th><th align="center" scope="col" style="height:10px;width:100px;">Valor de Deduções para ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Valor da Base de Cálculo do ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Alíquota do ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Valor do ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Item da Lista de Serviços</th><th align="center" scope="col" style="height:10px;width:100px;">Código do Município do Fato Gerador do ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Código de Tributação pelo ISSQN do Município</th><th align="center" scope="col" style="height:10px;width:100px;">Natureza da Operação de ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Incentivo Fiscal do ISSQN</th><th align="center" scope="col" style="height:10px;width:100px;">Valor Aproximado dos Tributos do Produto ou Serviço – Lei 12741/12</th>
		</tr><tr>
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_0" class="ValorCampo">1</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_0" class="ValorCampo">ACEM FATIADO</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_0" class="ValorCampo">0,9280</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_0" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_0" class="ValorCampo">18,54</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_0" class="ValorCampo">2</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_0" class="ValorCampo">02023000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_0" class="ValorCampo">5102</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_0" class="ValorCampo">19,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_0" class="ValorCampo">18,54</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_0" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_0" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_0" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_0" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_0" class="ValorCampo">00 - Tributada integralmente</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_0" class="ValorCampo">4,50</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_0" class="ValorCampo">0,83</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_0" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_0" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_0">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_0" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_0" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_0" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr style="background-color:#CCCCCC;">
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_1" class="ValorCampo">2</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_1" class="ValorCampo">ACEM FATIADO</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_1" class="ValorCampo">0,6860</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_1" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_1" class="ValorCampo">13,71</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_1" class="ValorCampo">2</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_1" class="ValorCampo">02023000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_1" class="ValorCampo">5102</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_1" class="ValorCampo">19,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_1" class="ValorCampo">13,71</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_1" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_1" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_1" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_1" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_1" class="ValorCampo">00 - Tributada integralmente</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_1" class="ValorCampo">4,50</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_1" class="ValorCampo">0,62</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_1" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_1" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_1">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_1" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_1" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_1" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr>
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_2" class="ValorCampo">3</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_2" class="ValorCampo">PERNIL SUINO FATIADO</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_2" class="ValorCampo">1,4740</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_2" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_2" class="ValorCampo">14,71</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_2" class="ValorCampo">386</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_2" class="ValorCampo">02032900</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_2" class="ValorCampo">5102</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_2" class="ValorCampo">9,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_2" class="ValorCampo">14,71</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_2" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_2" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_2" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_2" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_2" class="ValorCampo">00 - Tributada integralmente</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_2" class="ValorCampo">4,50</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_2" class="ValorCampo">0,66</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_2" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_2" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_2">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_2" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_2" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_2" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr style="background-color:#CCCCCC;">
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_3" class="ValorCampo">4</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_3" class="ValorCampo">SOBRECOXA</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_3" class="ValorCampo">2,0700</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_3" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_3" class="ValorCampo">20,66</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_3" class="ValorCampo">458</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_3" class="ValorCampo">02071400</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_3" class="ValorCampo">5102</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_3" class="ValorCampo">9,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_3" class="ValorCampo">20,66</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_3" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_3" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_3" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_3" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_3" class="ValorCampo">00 - Tributada integralmente</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_3" class="ValorCampo">4,50</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_3" class="ValorCampo">0,93</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_3" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_3" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_3">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_3" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_3" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_3" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr>
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_4" class="ValorCampo">5</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_4" class="ValorCampo">QUEIJO MUSSARELA FAT</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_4" class="ValorCampo">0,3100</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_4" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_4" class="ValorCampo">11,46</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_4" class="ValorCampo">535</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_4" class="ValorCampo">04069020</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_4" class="ValorCampo">5102</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_4" class="ValorCampo">36,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_4" class="ValorCampo">11,46</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_4" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_4" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_4" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_4" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_4" class="ValorCampo">00 - Tributada integralmente</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_4" class="ValorCampo">12,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_4" class="ValorCampo">1,38</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_4" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_4" class="ValorCampo">06 - Operação Tributável (Alíquota zero)</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_4">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_4" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_4" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_4" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr style="background-color:#CCCCCC;">
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_5" class="ValorCampo">6</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_5" class="ValorCampo">PRESUNTO COZIDO FAT</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_5" class="ValorCampo">0,3180</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_5" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_5" class="ValorCampo">8,58</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_5" class="ValorCampo">537</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_5" class="ValorCampo">16010000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_5" class="ValorCampo">5405</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_5" class="ValorCampo">26,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_5" class="ValorCampo">8,58</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_5" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_5" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_5" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_5" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_5" class="ValorCampo">60 - ICMS cobrado anteriormente por substituição tributária (substituído) ou por antecipação</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_5" class="ValorCampo">01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo / não cumulativo))</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_5" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_5" class="ValorCampo">0,0165</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_5" class="ValorCampo">0,0000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_5" class="ValorCampo">01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo / não cumulativo))</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_5" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_5" class="ValorCampo">0,0760</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_5">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_5" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_5" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_5" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr>
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_6" class="ValorCampo">7</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_6" class="ValorCampo">AZEITONAS PRETAS KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_6" class="ValorCampo">0,1440</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_6" class="ValorCampo">KG</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_6" class="ValorCampo">5,47</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_6" class="ValorCampo">566</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_6" class="ValorCampo">20057000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_6" class="ValorCampo">5405</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_6" class="ValorCampo">37,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_6" class="ValorCampo">5,47</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_6" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_6" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_6" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_6" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_6" class="ValorCampo">60 - ICMS cobrado anteriormente por substituição tributária (substituído) ou por antecipação</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_6" class="ValorCampo">01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo / não cumulativo))</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_6" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_6" class="ValorCampo">0,0165</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_6" class="ValorCampo">0,0000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_6" class="ValorCampo">01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo / não cumulativo))</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_6" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_6" class="ValorCampo">0,0760</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_6">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_6" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_6" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_6" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr><tr style="background-color:#CCCCCC;">
			<td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNum_7" class="ValorCampo">8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoDesc_7" class="ValorCampo">MOLHO DE TOMATE TRADICIONAL CEPERA SACHE</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoQtd_7" class="ValorCampo">3,0000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoUnit_7" class="ValorCampo">UN</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoIcmsValorLiquidoItem_7" class="ValorCampo">8,94</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoInformacaoAdicionalProduto_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoProduto_7" class="ValorCampo">5350</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoGtin_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoNcm_7" class="ValorCampo">21032010</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblCest_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCFOP_7" class="ValorCampo">5405</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorUnit_7" class="ValorCampo">2,980</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorBruto_7" class="ValorCampo">8,94</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRegraCalculo_7" class="ValorCampo">A</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorDesconto_7" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOutrasDespesasAcessorias_7" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioDescontoSubtotal_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoRateioAcrescimoSubtotal_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoObservacaoFisco_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoOrigemMercadoria_7" class="ValorCampo">0 - Nacional, exceto as indicadas nos códigos 3, 4, 5 e 8</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoTributacaoIcms_7" class="ValorCampo">60 - ICMS cobrado anteriormente por substituição tributária (substituído) ou por antecipação</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCodigoSituacaoOperacaoSimplesNacional_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaEfetiva_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoValorIcms_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisCodigoSitucaoTributario_7" class="ValorCampo">01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo / não cumulativo))</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorBaseCalculoPis_7" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPisPorcentagem_7" class="ValorCampo">0,0165</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisQuantidadeVendida_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisAliquotaPis2_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisValorPis_7" class="ValorCampo">0,0000</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorBaseCalculoPis_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPisPorcentagem_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStQuantidadeVendida_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStAliquotaPis_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoPisStValorPis_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsCodigoSituacaoTributarioCofins_7" class="ValorCampo">01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo / não cumulativo))</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorBaseCalculoCofins_7" class="ValorCampo">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoAliquotaCofinsPorcentagem_7" class="ValorCampo">0,0760</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsValorCofins_7">0,00</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsQuantidadeVendida_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsAliquotaCofins_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoCofins_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofinsPorcentagem_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorCofins_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStQuantidadeVendida_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaCofins_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorDeducaoIssqn_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorBaseCalculoIssqn_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStAliquotaIssqn_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStValorIssqn_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStItemListaServicos_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoMunicipioFatoGeradorIssqn_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStCodigoTributacaoMunicipio_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStNaturezaOperacaoIssqn_7" class="ValorCampo">Não Informado</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblProdutoServicoCofinsStIncentivoFiscalIssqn_7" class="ValorCampo">2 - Não</span>
                                                </td><td>
                                                    <span id="conteudo_grvProdutosServicos_lblvalorItem12741_7" class="ValorCampo">Não Informado</span>
                                                </td>
		</tr>
	</tbody></table>
</div>
                                </div>
                            </div>
                        </fieldset>
                    
            </div>
        </div>
        <div style="float: right;">
            <div style="float: left; font-weight: bold; padding-top: 5px;">
                Data/Hora: 
            </div>
            <span id="conteudo_lblDataHora" class="ValorCampo">11/12/2020 16:04:41</span>
        </div>
        <div class="alinhamentoLinha">
        </div>
        <div class="alinhamentoLinha" style="text-align: center;">
            <input type="submit" name="ctl00$conteudo$btnVoltar" value="Voltar" id="conteudo_btnVoltar" class="cssButton" style="width:100px;" />
        </div>
    </div>

                                    <div id="divMensagem">
                                    </div>
                                    <input type="hidden" id="__LASTFOCUS" value="" />
                                </div>
                            </td>
                            <td class="linhaDireita">
                            </td>
                        </tr>
                        <tr>
                            <td class="cantoInfEsq">
                            </td>
                            <td class="linhaInferior">
                            </td>
                            <td class="cantoInfDir">
                            </td>
                        </tr>
                    </tbody></table>
                </div>
            </div>
            
<div style="float: right; padding-top: 10px; padding-right: 15px;">
<p style="color: #C0C0C0">  </p>
</div>

             <div class="BottomStyle">
                <div id="footer">
                    <p>
                        Secretaria da Fazenda do Estado de São Paulo</p>
                </div>
            </div>
        </div>
        

<script type="text/javascript">
//&lt;![CDATA[
(function() {var fn = function() {$get("ToolkitScriptManager1_HiddenField").value = '';Sys.Application.remove_init(fn);};Sys.Application.add_init(fn);})();
theForm.oldSubmit = theForm.submit;
theForm.submit = WebForm_SaveScrollPositionSubmit;

theForm.oldOnSubmit = theForm.onsubmit;
theForm.onsubmit = WebForm_SaveScrollPositionOnSubmit;

theForm.oldOnLoad = window.onload;
window.onload = WebForm_RestoreScrollPosition;
//]]&gt;
</script>
</form>
    </div>


</body></html>"
  }
}